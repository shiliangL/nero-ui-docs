import{o as e,e as t,w as s,h as i,i as a,g as n,B as o,f as d,j as r,b as l,l as p,n as h}from"./chunks/naive-ui.DyEX4l5m.js";import{b as c,a as g,S as k}from"./chunks/shopping-cart.3SyFlmgX.js";import{_ as u}from"./chunks/index.vue_vue_type_script_setup_true_lang.q2_t13Z_.js";import{Q as m}from"./chunks/index.BsjzT1UF.js";import"./chunks/createLucideIcon.xZBn7lwy.js";import"./chunks/index.6vUEYOb4.js";import"./chunks/defu.CAfuikgh.js";const E={class:"mb-2 flex gap-2"},y={__name:"config",setup(l){function p(){window.$message.info("这是一条自定义图标的消息",{icon:()=>r(c,{size:18})})}function h(){window.$message.info("这是一条hover不消失的消息",{icon:()=>r(g,{size:18}),keepAliveOnHover:!0})}function m(){window.$message.info("这是一条一直存在And可关闭的消息",{closable:!0,duration:0,icon:()=>r(k,{size:18})})}return(r,l)=>(e(),t(n(u),null,{default:s((()=>[i("div",E,[a(n(o),{type:"primary",onClick:p},{icon:s((()=>[a(n(c))])),default:s((()=>[l[0]||(l[0]=d(" 自定义图标 "))])),_:1}),a(n(o),{type:"primary",onClick:h},{icon:s((()=>[a(n(g))])),default:s((()=>[l[1]||(l[1]=d(" hover不消失 "))])),_:1}),a(n(o),{type:"primary",onClick:m},{icon:s((()=>[a(n(k))])),default:s((()=>[l[2]||(l[2]=d(" 一直存在And可关闭 "))])),_:1})])])),_:1}))}},v={class:"mb-2 flex gap-2"},f={__name:"base",setup(r){const l={error:"这是一条错误消息",info:"这是一条信息消息",loading:"这是一条加载中消息",success:"这是一条成功消息",warning:"这是一条警告消息"};function p(e){window.$message[e]&&window.$message[e](l[e])}return(r,l)=>(e(),t(n(u),null,{default:s((()=>[i("div",v,[a(n(o),{type:"primary",onClick:l[0]||(l[0]=e=>p("info"))},{default:s((()=>l[5]||(l[5]=[d(" 信息 ")]))),_:1}),a(n(o),{type:"success",onClick:l[1]||(l[1]=e=>p("success"))},{default:s((()=>l[6]||(l[6]=[d(" 成功 ")]))),_:1}),a(n(o),{type:"warning",onClick:l[2]||(l[2]=e=>p("warning"))},{default:s((()=>l[7]||(l[7]=[d(" 警告 ")]))),_:1}),a(n(o),{type:"error",onClick:l[3]||(l[3]=e=>p("error"))},{default:s((()=>l[8]||(l[8]=[d(" 错误 ")]))),_:1}),a(n(o),{type:"primary",onClick:l[4]||(l[4]=e=>p("loading"))},{default:s((()=>l[9]||(l[9]=[d(" 加载 ")]))),_:1})])])),_:1}))}},b=JSON.parse('{"title":"Message 信息","description":"","frontmatter":{},"headers":[],"relativePath":"components/message.md","filePath":"components/message.md"}'),C={name:"components/message.md"},w=Object.assign(C,{setup:t=>(t,o)=>{const r=h("ClientOnly");return e(),l("div",null,[o[0]||(o[0]=p('<h1 id="message-信息" tabindex="-1">Message 信息 <a class="header-anchor" href="#message-信息" aria-label="Permalink to &quot;Message 信息&quot;">​</a></h1><p>全局Message消息提示反馈。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>🚀 允许你在任意组件或者非setup的地方使用。</li><li>🎯 快捷使用,少写一点代码,无需引入相关的Hook。</li></ul></div><h2 id="使用之前" tabindex="-1">使用之前 <a class="header-anchor" href="#使用之前" aria-label="Permalink to &quot;使用之前&quot;">​</a></h2><p>在系统人口或者根组件中引入</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">import App from &#39;./app.vue&#39;;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">import { RNProviderFeedback } from &#39;@nero/next&#39;;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RNProviderFeedback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RNProviderFeedback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>可设置类型<code>info | success | warning | error | loading | default </code>达到不同的提示效果。</p>',8)),a(r,null,{default:s((()=>[a(n(m),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"atom-one-light",darkTheme:"atom-one-dark",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,vueCode:n("<script setup>\nimport { RNProviderFeedback } from '@nero/next';\nimport { NButton } from 'naive-ui';\n\nconst MESSAGE_TYPES = {\n  error: '这是一条错误消息',\n  info: '这是一条信息消息',\n  loading: '这是一条加载中消息',\n  success: '这是一条成功消息',\n  warning: '这是一条警告消息',\n};\n\nfunction createMessage(type) {\n  window.$message[type] && window.$message[type](MESSAGE_TYPES[type]);\n}\n<\/script>\n\n<template>\n  <RNProviderFeedback>\n    <div class=\"mb-2 flex gap-2\">\n      <NButton type=\"primary\" @click=\"createMessage('info')\"> 信息 </NButton>\n      <NButton type=\"success\" @click=\"createMessage('success')\"> 成功 </NButton>\n      <NButton type=\"warning\" @click=\"createMessage('warning')\"> 警告 </NButton>\n      <NButton type=\"error\" @click=\"createMessage('error')\"> 错误 </NButton>\n      <NButton type=\"primary\" @click=\"createMessage('loading')\"> 加载 </NButton>\n    </div>\n  </RNProviderFeedback>\n</template>\n")},{vue:s((()=>[a(f)])),_:1},8,["vueCode"])])),_:1}),o[1]||(o[1]=i("h2",{id:"其他配置",tabindex:"-1"},[d("其他配置 "),i("a",{class:"header-anchor",href:"#其他配置","aria-label":'Permalink to "其他配置"'},"​")],-1)),o[2]||(o[2]=i("p",null,"其他配置项And换个图标",-1)),a(r,null,{default:s((()=>[a(n(m),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"atom-one-light",darkTheme:"atom-one-dark",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,vueCode:n("<script setup>\nimport { h } from 'vue';\n\nimport { RNProviderFeedback } from '@nero/next';\nimport { ShieldCheck, ShoppingBag, ShoppingCart } from 'lucide-vue-next';\nimport { NButton } from 'naive-ui';\n\nfunction createRenderIcon() {\n  window.$message.info('这是一条自定义图标的消息', {\n    icon: () => h(ShieldCheck, { size: 18 }),\n  });\n}\n\nfunction createKeepAlive() {\n  window.$message.info('这是一条hover不消失的消息', {\n    icon: () => h(ShoppingCart, { size: 18 }),\n    keepAliveOnHover: true,\n  });\n}\n\nfunction createClosable() {\n  window.$message.info('这是一条一直存在And可关闭的消息', {\n    closable: true,\n    duration: 0,\n    icon: () => h(ShoppingBag, { size: 18 }),\n  });\n}\n<\/script>\n\n<template>\n  <RNProviderFeedback>\n    <div class=\"mb-2 flex gap-2\">\n      <NButton type=\"primary\" @click=\"createRenderIcon\">\n        <template #icon>\n          <ShieldCheck />\n        </template>\n        自定义图标\n      </NButton>\n      <NButton type=\"primary\" @click=\"createKeepAlive\">\n        <template #icon>\n          <ShoppingCart />\n        </template>\n        hover不消失\n      </NButton>\n      <NButton type=\"primary\" @click=\"createClosable\">\n        <template #icon>\n          <ShoppingBag />\n        </template>\n        一直存在And可关闭\n      </NButton>\n    </div>\n  </RNProviderFeedback>\n</template>\n")},{vue:s((()=>[a(y)])),_:1},8,["vueCode"])])),_:1}),o[3]||(o[3]=p('<h2 id="消息内容" tabindex="-1">消息内容 <a class="header-anchor" href="#消息内容" aria-label="Permalink to &quot;消息内容&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.$message.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(content: string, options: MessageOptions)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.$message.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">warning</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(content: string, options: MessageOptions)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.$message.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(content: string, options: MessageOptions)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.$message.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(content: string, options: MessageOptions)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.$message.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">loading</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(content: string, options: MessageOptions)</span></span></code></pre></div><h2 id="message-方法" tabindex="-1">Message 方法 <a class="header-anchor" href="#message-方法" aria-label="Permalink to &quot;Message 方法&quot;">​</a></h2><table><thead><tr><th>名称</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>destroyAll</td><td><code>() =&gt; void</code></td><td>销毁所有弹出的信息</td></tr><tr><td>create</td><td><code>(content: string | (() =&gt; VNodeChild), option?: MessageOption) =&gt; MessageReactive</code></td><td>调用 create 类型的信息</td></tr><tr><td>error</td><td><code>(content: string | (() =&gt; VNodeChild), option?: MessageOption) =&gt; MessageReactive</code></td><td>调用 error 类型的信息</td></tr><tr><td>info</td><td><code>(content: string | (() =&gt; VNodeChild), option?: MessageOption) =&gt; MessageReactive</code></td><td>调用 info 类型的信息</td></tr><tr><td>loading</td><td><code>(content: string | (() =&gt; VNodeChild), option?: MessageOption) =&gt; MessageReactive</code></td><td>调用 loading 类型的信息</td></tr><tr><td>success</td><td><code>(content: string | (() =&gt; VNodeChild), option?: MessageOption) =&gt; MessageReactive</code></td><td>调用 success 类型的信息</td></tr><tr><td>warning</td><td><code>(content: string | (() =&gt; VNodeChild), option?: MessageOption) =&gt; MessageReactive</code></td><td>调用 warning 类型的信息</td></tr></tbody></table><h2 id="messageoption-属性" tabindex="-1">MessageOption 属性 <a class="header-anchor" href="#messageoption-属性" aria-label="Permalink to &quot;MessageOption 属性&quot;">​</a></h2><table><thead><tr><th>名称</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>closable</td><td><code>boolean</code></td><td>是否显示 close 图标</td></tr><tr><td>duration</td><td><code>number</code></td><td>持续时间（单位：毫秒），设为 0 则不会自动关闭</td></tr><tr><td>icon</td><td><code>() =&gt; VNodeChild</code></td><td>信息图标</td></tr><tr><td>keepAliveOnHover</td><td><code>boolean</code></td><td>Hover 到信息上是否不销毁</td></tr><tr><td>render</td><td><code>MessageRenderMessage</code></td><td>消息的渲染函数</td></tr><tr><td>showIcon</td><td><code>boolean</code></td><td>是否展示图标</td></tr><tr><td>type</td><td><code>info success warning error loading default</code></td><td>信息类型</td></tr><tr><td>onAfterLeave</td><td><code>() =&gt; void</code></td><td>信息消失动画结束的回调</td></tr><tr><td>onClose</td><td><code>() =&gt; void</code></td><td>点击关闭图标的回调</td></tr><tr><td>onLeave</td><td><code>() =&gt; void</code></td><td>信息开始消失的回调</td></tr></tbody></table><h2 id="messagereactive-methods" tabindex="-1">MessageReactive Methods <a class="header-anchor" href="#messagereactive-methods" aria-label="Permalink to &quot;MessageReactive Methods&quot;">​</a></h2><table><thead><tr><th>名称</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>destroy</td><td><code>()</code></td><td>销毁</td></tr></tbody></table>',8))])}});export{b as __pageData,w as default};
