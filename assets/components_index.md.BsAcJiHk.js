import{_ as t}from"./chunks/plugin-vue_export-helper.BCo6x5W8.js";import{o as s,b as i,l}from"./chunks/naive-ui.DyEX4l5m.js";const o=JSON.parse('{"title":"组件库文档","description":"","frontmatter":{},"headers":[],"relativePath":"components/index.md","filePath":"components/index.md"}');const a=t({name:"components/index.md"},[["render",function(t,o,a,e,r,n){return s(),i("div",null,o[0]||(o[0]=[l('<h1 id="组件库文档" tabindex="-1">组件库文档 <a class="header-anchor" href="#组件库文档" aria-label="Permalink to &quot;组件库文档&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>组件库简介这是一套专为后台管理系统开发设计的高效率组件集合。通过对常用功能的封装和优化，大幅提升开发效率，减少重复代码，实现更快速的业务开发。</p></div><h2 id="core-advantages" tabindex="-1">核心优势 <a class="header-anchor" href="#core-advantages" aria-label="Permalink to &quot;核心优势 {#core-advantages}&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">主要特点</p><ul><li>🚀 <strong>高效开发</strong>: 通过配置式调用，减少重复代码，提高开发效率</li><li>📦 <strong>便捷使用</strong>: 简化组件调用方式，降低使用门槛</li><li>💡 <strong>业务聚焦</strong>: 让开发者更专注于业务逻辑实现，而不是基础组件的配置</li><li>🔧 <strong>可维护性</strong>: 统一的组件封装方案，提高代码可维护性</li><li>🎨 <strong>灵活扩展</strong>: 保持高度的可定制性，满足不同业务场景需求</li></ul></div><h2 id="best-practices" tabindex="-1">最佳实践 <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;最佳实践 {#best-practices}&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">开发建议</p><ol><li>🎯 <strong>配置优先</strong>: 优先使用配置方式而不是命令式代码</li><li>🎨 <strong>统一风格</strong>: 保持组件使用风格的一致性</li><li>📦 <strong>按需加载</strong>: 根据实际需求引入组件</li><li>💻 <strong>TypeScript</strong>: 充分利用类型提示提高开发效率</li></ol></div><h2 id="notes" tabindex="-1">注意事项 <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;注意事项 {#notes}&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">使用须知</p><ul><li>💡 组件库依赖于 Vue 3.x 版本</li><li>📝 建议使用 TypeScript 获得更好的开发体验</li><li>⚠️ 注意查看各组件的具体配置选项</li><li>⚙️ 合理使用组件的默认值配置</li></ul></div>',8)]))}]]);export{o as __pageData,a as default};
