import{u as e}from"./chunks/useAjaxHook.CmkDii63.js";import{_ as t}from"./chunks/index.vue_vue_type_script_setup_true_lang.CJETgBTM.js";import{d as a,p as n,q as d,u as o,c as l,o as r,e as i,w as s,i as c,g as u,m as p,R as h,k as m,b as f,h as b,t as v,f as x,l as g,n as k}from"./chunks/naive-ui.DyEX4l5m.js";import{Q as j}from"./chunks/index.BsjzT1UF.js";import"./chunks/index.DOObuXoO.js";import"./chunks/index.6vUEYOb4.js";const T=a({desc:"树形结构数据下拉选择组件, 支持ajax请求, 支持依赖参数等拓展",name:"RNSelectTreeNext",__name:"index",props:n({focusLoad:{type:Boolean,default:!1},ajax:{},childrenField:{},dependencies:{},format:{},immediate:{type:Boolean,default:!0},labelField:{},options:{},params:{},resultField:{},valueField:{}},{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(a,{expose:n}){const m=a,f=d(a,"modelValue"),b=o(),v=l((()=>({ajax:m.ajax,dependencies:m.dependencies,format:m.format,immediate:m.immediate,labelField:m.labelField,options:m.options,params:m.params,resultField:m.resultField,valueField:m.valueField}))),{error:x,loading:g,options:k,refresh:j}=e(v);function T(){m.focusLoad&&j()}return n({error:x,loading:g,options:k,refresh:j}),(e,a)=>(r(),i(u(h),p(u(b),{value:f.value,"onUpdate:value":a[0]||(a[0]=e=>f.value=e),loading:u(g),options:u(k),"children-field":"children",filterable:"","key-field":"value","label-field":"label","max-tag-count":"responsive",placeholder:"请选择",onFocus:T}),{empty:s((()=>[c(u(t))])),_:1},16,["value","loading","options"]))}}),N={class:"flex w-full flex-col gap-2"},w={class:"mb-1"},D={__name:"dependencies",setup(e){const t=m({id:null});function a(e,t){console.error(e,t),window.$message.info(t.label)}function n(){return fetch("https://apifoxmock.com/m1/5298581-4967943-default/api/get/dept").then((e=>e.json()))}function d(){t.value={...t.value,id:Date.now()}}return(e,o)=>(r(),f("div",N,[b("div",w,[o[0]||(o[0]=b("span",null," 关联依赖- ",-1)),b("span",{class:"cursor-pointer text-[#145bff]",onClick:d}," 依赖项 "+v(t.value),1)]),c(u(T),{ajax:n,dependencies:t.value,"onUpdate:value":a},null,8,["dependencies"])]))}},y={__name:"ajax",setup(e){function t(e,t){console.error(e,t),window.$message.info(t.label)}function a(){return fetch("https://apifoxmock.com/m1/5298581-4967943-default/api/get/dept").then((e=>e.json()))}return(e,n)=>(r(),i(u(T),{ajax:a,"onUpdate:value":t}))}},B={__name:"base",setup(e){const t=[{label:"销售单信息",value:"tab1"},{label:"配货单信息",value:"tab2"}];function a(e,t){console.error(e,t),window.$message.info(t.label)}return(e,n)=>(r(),i(u(T),{options:t,"onUpdate:value":a}))}},_=JSON.parse('{"title":"RNSelectTreeNext 树形选择器组件","description":"","frontmatter":{},"headers":[],"relativePath":"components/RNSelectTreeNext.md","filePath":"components/RNSelectTreeNext.md"}'),A={name:"components/RNSelectTreeNext.md"},C=Object.assign(A,{setup:e=>(e,t)=>{const a=k("ClientOnly");return r(),f("div",null,[t[0]||(t[0]=b("h1",{id:"rnselecttreenext-树形选择器组件",tabindex:"-1"},[x("RNSelectTreeNext 树形选择器组件 "),b("a",{class:"header-anchor",href:"#rnselecttreenext-树形选择器组件","aria-label":'Permalink to "RNSelectTreeNext 树形选择器组件"'},"​")],-1)),t[1]||(t[1]=b("ul",null,[b("li",null,"🌲 完美展示层级结构"),b("li",null,"🔍 支持节点搜索定位"),b("li",null,"🎨 丰富的节点配置"),b("li",null,"🚀 支持ajax加载数据"),b("li",null,"🌟 支持关联数据的加载")],-1)),t[2]||(t[2]=b("h2",{id:"基础用法",tabindex:"-1"},[x("基础用法 "),b("a",{class:"header-anchor",href:"#基础用法","aria-label":'Permalink to "基础用法"'},"​")],-1)),c(a,null,{default:s((()=>[c(u(j),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"atom-one-light",darkTheme:"atom-one-dark",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,vueCode:u("<script setup>\nimport { RNSelectTreeNext } from '@nero/next';\n\nconst options = [\n  {\n    label: '销售单信息',\n    value: 'tab1',\n  },\n  {\n    label: '配货单信息',\n    value: 'tab2',\n  },\n];\n\nfunction update(key, option) {\n  console.error(key, option);\n  window.$message.info(option.label);\n}\n<\/script>\n\n<template>\n  <RNSelectTreeNext :options=\"options\" @update:value=\"update\" />\n</template>\n")},{vue:s((()=>[c(B)])),_:1},8,["vueCode"])])),_:1}),t[3]||(t[3]=b("h2",{id:"使用ajax",tabindex:"-1"},[x("使用ajax "),b("a",{class:"header-anchor",href:"#使用ajax","aria-label":'Permalink to "使用ajax"'},"​")],-1)),c(a,null,{default:s((()=>[c(u(j),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"atom-one-light",darkTheme:"atom-one-dark",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,vueCode:u("<script setup>\nimport { RNSelectTreeNext } from '@nero/next';\n\nfunction update(key, option) {\n  console.error(key, option);\n  window.$message.info(option.label);\n}\n\nfunction ajax() {\n  return fetch(\n    'https://apifoxmock.com/m1/5298581-4967943-default/api/get/dept',\n  ).then((r) => r.json());\n}\n<\/script>\n\n<template>\n  <RNSelectTreeNext :ajax=\"ajax\" @update:value=\"update\" />\n</template>\n")},{vue:s((()=>[c(y)])),_:1},8,["vueCode"])])),_:1}),t[4]||(t[4]=b("h2",{id:"关联加载",tabindex:"-1"},[x("关联加载 "),b("a",{class:"header-anchor",href:"#关联加载","aria-label":'Permalink to "关联加载"'},"​")],-1)),c(a,null,{default:s((()=>[c(u(j),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"atom-one-light",darkTheme:"atom-one-dark",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,vueCode:u('<script setup>\nimport { ref } from \'vue\';\n\nimport { RNSelectTreeNext } from \'@nero/next\';\n\nconst dependencies = ref({\n  id: null,\n});\n\nfunction update(key, option) {\n  console.error(key, option);\n  window.$message.info(option.label);\n}\n\nfunction ajax() {\n  return fetch(\n    \'https://apifoxmock.com/m1/5298581-4967943-default/api/get/dept\',\n  ).then((r) => r.json());\n}\n\nfunction changeDependencies() {\n  dependencies.value = {\n    ...dependencies.value,\n    id: Date.now(),\n  };\n}\n<\/script>\n\n<template>\n  <div class="flex w-full flex-col gap-2">\n    <div class="mb-1">\n      <span> 关联依赖- </span>\n      <span class="cursor-pointer text-[#145bff]" @click="changeDependencies">\n        依赖项 {{ dependencies }}\n      </span>\n    </div>\n    <RNSelectTreeNext\n      :ajax="ajax"\n      :dependencies="dependencies"\n      @update:value="update"\n    />\n  </div>\n</template>\n')},{vue:s((()=>[c(D)])),_:1},8,["vueCode"])])),_:1}),t[5]||(t[5]=g('<h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>data</td><td>树形数据</td><td><code>TreeOption[]</code></td><td><code>[]</code></td></tr><tr><td>value(v-model)</td><td>当前选中值</td><td><code>string | number | Array&lt;string | number&gt;</code></td><td>-</td></tr><tr><td>multiple</td><td>是否多选</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td>cascade</td><td>是否级联选择</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td>remote</td><td>是否远程加载</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td>onLoad</td><td>加载子节点的方法</td><td><code>(node: TreeOption) =&gt; Promise&lt;TreeOption[]&gt;</code></td><td>-</td></tr><tr><td>placeholder</td><td>占位提示文本</td><td><code>string</code></td><td>-</td></tr><tr><td>maxTagCount</td><td>最多显示多少个标签</td><td><code>number</code></td><td>-</td></tr></tbody></table><h3 id="treeoption-配置项" tabindex="-1">TreeOption 配置项 <a class="header-anchor" href="#treeoption-配置项" aria-label="Permalink to &quot;TreeOption 配置项&quot;">​</a></h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>label</td><td>节点文本</td><td><code>string</code></td><td>-</td></tr><tr><td>value</td><td>节点值</td><td><code>string | number</code></td><td>-</td></tr><tr><td>children</td><td>子节点</td><td><code>TreeOption[]</code></td><td>-</td></tr><tr><td>isLeaf</td><td>是否叶子节点</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td>disabled</td><td>是否禁用</td><td><code>boolean</code></td><td><code>false</code></td></tr></tbody></table><h3 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>update:value</td><td>选中值改变时触发</td><td><code>(value: string | number | Array&lt;string | number&gt;) =&gt; void</code></td></tr><tr><td>load</td><td>异步加载完成时触发</td><td><code>(node: TreeOption, children: TreeOption[]) =&gt; void</code></td></tr></tbody></table>',6))])}});export{_ as __pageData,C as default};
