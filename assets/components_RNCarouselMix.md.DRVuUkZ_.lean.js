import{_ as t}from"./chunks/index.vue_vue_type_script_setup_true_lang.C9Xc3vaO.js";import{_ as e}from"./chunks/index.vue_vue_type_script_setup_true_lang.mCDiXtVW.js";import{k as a,o,b as l,i as n,g as s,j as d,l as i,w as r,h as u,f as h,n as c}from"./chunks/naive-ui.DyEX4l5m.js";import{Q as p}from"./chunks/index.BsjzT1UF.js";const m={class:"flex flex-col items-start gap-2"},v={__name:"slot",setup(i){const r=a(0),u=[{content:()=>d("div",{class:"h-[500px]"},[d("iframe",{class:"size-full",src:"https://vitejs.cn/vite3-cn/"})]),label:"vitejs",value:1},{content:()=>d("div",{class:"h-[500px]"},[d("iframe",{class:"size-full",src:"https://www.tailwindcss.cn/"})]),label:"tailwindcss",value:2}];return(a,d)=>(o(),l("div",m,[n(s(t),{modelValue:r.value,"onUpdate:modelValue":d[0]||(d[0]=t=>r.value=t),options:u,primary:""},null,8,["modelValue"]),n(s(e),{modelValue:r.value,"onUpdate:modelValue":d[1]||(d[1]=t=>r.value=t),options:u,autoplay:""},null,8,["modelValue"])]))}},f={class:"flex flex-col items-start gap-2"},b={__name:"base",setup(i){const r=a(0),u=[{content:()=>d("div",{},[d("img",{src:"https://picsum.photos/640/320?random=2024"})]),label:"销售单信息",value:0},{content:()=>d("div",{},[d("img",{src:"https://picsum.photos/640/320?random=2025"})]),label:"配货单信息",value:1}];return(a,d)=>(o(),l("div",f,[n(s(t),{modelValue:r.value,"onUpdate:modelValue":d[0]||(d[0]=t=>r.value=t),options:u,primary:""},null,8,["modelValue"]),n(s(e),{modelValue:r.value,"onUpdate:modelValue":d[1]||(d[1]=t=>r.value=t),options:u},null,8,["modelValue"])]))}},x=JSON.parse('{"title":"RNCarousel 轮播组件","description":"","frontmatter":{},"headers":[],"relativePath":"components/RNCarouselMix.md","filePath":"components/RNCarouselMix.md"}'),g={name:"components/RNCarouselMix.md"},C=Object.assign(g,{setup:t=>(t,e)=>{const a=c("ClientOnly");return o(),l("div",null,[e[0]||(e[0]=i('<h1 id="rncarousel-轮播组件" tabindex="-1">RNCarousel 轮播组件 <a class="header-anchor" href="#rncarousel-轮播组件" aria-label="Permalink to &quot;RNCarousel 轮播组件&quot;">​</a></h1><p>轮播当业务面板的切换使用,还不错。</p><ul><li>🎭 可以是简单的内容切换</li><li>🎨 可以是绚丽的轮播展示</li><li>🎯 完全可控的切换逻辑</li><li>🌟 需要展示多个内容面板时</li><li>📋 需要轮播展示内容时</li></ul><h2 id="组件介绍" tabindex="-1">组件介绍 <a class="header-anchor" href="#组件介绍" aria-label="Permalink to &quot;组件介绍&quot;">​</a></h2><p>RNCarousel 是一个灵活的轮播面板组件，支持多种内容渲染方式，可用于业务页面切换。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>最简单的轮播面板用法, 搞几个随机的图片轮播一下。</p>',7)),n(a,null,{default:r((()=>[n(s(p),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"atom-one-light",darkTheme:"atom-one-dark",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,vueCode:s("<script setup>\nimport { h, ref } from 'vue';\n\nimport { RNButtonGroup, RNCarousel } from '@nero/next';\n\nconst modelRef = ref(0);\nconst options = [\n  {\n    content: () =>\n      h('div', {}, [\n        h('img', { src: `https://picsum.photos/640/320?random=2024` }),\n      ]),\n    label: '销售单信息',\n    value: 0,\n  },\n  {\n    content: () =>\n      h('div', {}, [\n        h('img', { src: `https://picsum.photos/640/320?random=2025` }),\n      ]),\n    label: '配货单信息',\n    value: 1,\n  },\n];\n<\/script>\n\n<template>\n  <div class=\"flex flex-col items-start gap-2\">\n    <RNButtonGroup v-model=\"modelRef\" :options=\"options\" primary />\n    <RNCarousel v-model=\"modelRef\" :options=\"options\" />\n  </div>\n</template>\n")},{vue:r((()=>[n(b)])),_:1},8,["vueCode"])])),_:1}),e[1]||(e[1]=u("h2",{id:"插槽使用",tabindex:"-1"},[h("插槽使用 "),u("a",{class:"header-anchor",href:"#插槽使用","aria-label":'Permalink to "插槽使用"'},"​")],-1)),e[2]||(e[2]=u("p",null,"多一个选择，多几种渲染的方式。",-1)),n(a,null,{default:r((()=>[n(s(p),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"atom-one-light",darkTheme:"atom-one-dark",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,vueCode:s("<script setup>\nimport { h, ref } from 'vue';\n\nimport { RNButtonGroup, RNCarousel } from '@nero/next';\n\nconst modelRef = ref(0);\nconst options = [\n  {\n    content: () =>\n      h('div', { class: 'h-[500px]' }, [\n        h('iframe', {\n          class: 'size-full',\n          src: `https://vitejs.cn/vite3-cn/`,\n        }),\n      ]),\n    label: 'vitejs',\n    value: 1,\n  },\n  {\n    content: () =>\n      h('div', { class: 'h-[500px]' }, [\n        h('iframe', {\n          class: 'size-full',\n          src: `https://www.tailwindcss.cn/`,\n        }),\n      ]),\n    label: 'tailwindcss',\n    value: 2,\n  },\n];\n<\/script>\n\n<template>\n  <div class=\"flex flex-col items-start gap-2\">\n    <RNButtonGroup v-model=\"modelRef\" :options=\"options\" primary />\n    <RNCarousel v-model=\"modelRef\" :options=\"options\" autoplay />\n  </div>\n</template>\n")},{vue:r((()=>[n(v)])),_:1},8,["vueCode"])])),_:1}),e[3]||(e[3]=i('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>options</td><td>面板配置项</td><td><code>Option[]</code></td><td><code>[]</code></td></tr><tr><td>v-model</td><td>当前面板索引</td><td><code>number</code></td><td><code>0</code></td></tr></tbody></table><h3 id="option-配置项" tabindex="-1">Option 配置项 <a class="header-anchor" href="#option-配置项" aria-label="Permalink to &quot;Option 配置项&quot;">​</a></h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>label</td><td>面板标签</td><td><code>string</code></td><td>-</td></tr><tr><td>value</td><td>面板值</td><td><code>string</code></td><td>-</td></tr><tr><td>content</td><td>面板内容</td><td><code>string | (() =&gt; VNodeChild) | VNode</code></td><td>-</td></tr></tbody></table><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td><code>[value]</code></td><td>使用面板的 value 作为插槽名</td><td><code>{ tab: Option }</code></td></tr></tbody></table>',7))])}});export{x as __pageData,C as default};
